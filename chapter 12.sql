--- 12.2

-- a

DECLARE 
JDATE DATE;
YEARS NUMBER;
BEGIN
SELECT HIRE_DATE INTO JDATE FROM EMPLOYEES WHERE EMPLOYEE_ID = 100;
YEARS := (MONTHS_BETWEEN(SYSDATE, JDATE)/12);
IF YEARS >= 10 THEN DBMS_OUTPUT.PUT_LINE('SENIOR EMPLOYEE');
ELSE DBMS_OUTPUT.PUT_LINE('JUNIOR EMPLOYEE');
END IF;
EXCEPTION WHEN NO_DATA_FOUND THEN DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
WHEN TOO_MANY_ROWS THEN DBMS_OUTPUT.PUT_LINE('MORE THEN ONE RESULT FOUND');
WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('UNKNOWN ERROR');
END;
/

-- b

DECLARE
  v_country_id   VARCHAR2(100) := 'BD';        
  v_country_name VARCHAR2(100) := 'Bangladesh';
  v_region_id    NUMBER := 2;
BEGIN
  INSERT INTO COUNTRIES (COUNTRY_ID, COUNTRY_NAME, REGION_ID)
  VALUES (v_country_id, v_country_name, v_region_id);

  DBMS_OUTPUT.PUT_LINE('Row inserted successfully.');

EXCEPTION
  WHEN DUP_VAL_ON_INDEX THEN
    DBMS_OUTPUT.PUT_LINE('Error: COUNTRY_ID ' || v_country_id || ' already exists.');
WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('An unexpected error occurred: ' || SQLERRM);
END;

--- 12.3

-- a

DECLARE
JDATE DATE;
BEGIN
FOR R IN (SELECT * FROM EMPLOYEES)
LOOP
JDATE := R.HIRE_DATE;
IF TO_CHAR(SYSDATE, 'DD-MM') = TO_CHAR(JDATE, 'DD-MM') THEN DBMS_OUTPUT.PUT_LINE('HAPPY ANNIVERSARY ' || R.LAST_NAME);
END IF; 
END LOOP;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('UNKNOWN ERROR');
END;
/

--- 12.6

-- a

CREATE OR REPLACE FUNCTION ISNUMBER (STR IN VARCHAR2) RETURN VARCHAR2
DECLARE NUM NUMBER;
BEGIN NUM := TO_NUMBER(STR);
RETURN 'YES';
EXCEPTION 
WHEN OTHERS THEN RETURN 'NO';
END;
/

--b

CREATE OR REPLACE TRIGGER HELLO_WORLD6 AFTER DELETE ON STUDENTS
FOR EACH ROW
DECLARE 
BEGIN DBMS_OUTPUT.PUT_LINE('HELLO WORLD 6');
END;
/

-- c

CREATE OR REPLACE TRIGGER INVALID_NAME BEFORE INSERT ON STUDENTS 
FOR EACH ROW 
DECLARE
BEGIN
IF NOT REGEXP_LIKE(:NEW.NAME, '^[A-Za-z]+$') THEN RAISE_APPLICATION_ERROR('INVALID NAME');
END IF;
END;
/

-- d

CREATE TABLE LOW_CGPA_STUDENTS
(NAME VARCHAR2(100));

CREATE OR REPLACE TRIGGER T1 BEFORE  UPDATE OR INSERT ON STUDENTS
FOR EACH ROW
DECLARE
S_NAME VARCHAR2(100); 
BEGIN
S_NAME := :NEW.NAME;
IF :NEW.CGPA < 2.0 THEN INSERT INTO LOW_CGPA_STUDENTS VALUES (S_NAME);
END IF;
END;
/
